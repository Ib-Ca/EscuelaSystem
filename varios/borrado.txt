    //obtener id
    const selectedOption = tipo_docu.find(
      (option) => option.idDocumento.toString() === e.target.value
    );
    if (selectedOption) {
      const idDocumento = selectedOption.idDocumento;
      console.log(idDocumento);
    }



    //obtener id
    /*const paisElegido = pais.find(
      (option) => option.idNacionalidad.toString() === e.target.value
    );*/
    /* if (paisElegido) {
      const idNacionalidad = paisElegido.idNacionalidad;
      console.log(idNacionalidad);
   }*/


//id civil
          const elegido = civil.find(
      (option) => option.idEstado_civil.toString() === e.target.value
    );
     if (elegido) {
      const elegidoid = elegido.idEstado_civil;
      console.log(elegidoid);
   }

#RESETEAR AUTO INCREMENT SQL
SET @autoid:=0;
UPDATE nacionalidad SET idNacionalidad = @autoid:= (@autoid+1);
ALTER TABLE nacionalidad AUTO_INCREMENT = 1;


     .then(function (response) {
        listaAlumnos();
        console.log("entro en then: ", response);
        alert("Alumno Registrado");
      })
      .catch(function (error) {
        console.log("Error en axios: ", error);
        alert("hubo un error");
      });
  };

  
const [responses,setResponses]=useState()

    .then(function (response) {
      console.log("ENTRO EN THEN",response);
      setResponses(response.data.title);
    })
    .catch(function (error) {
      console.log(error);
      setResponse("ENTRO EN CATCH");
    });
  };




  CODIGO DE TABLA 
   <div key={key} className="">
              {value.Nombre}
            </div>





  const modificar = (value) => {
    setEditar(true);
    setNombre(value.Nombre);
    setApellidos(value.Apellido);
    setNro_docu(value.Numero_docu);
    setCorreo(value.Correo);
    setTelefono(value.Numero_telefono);
    // setSemeste(value.Semestre_idSemestre)
    //value.Movilidad_idMovilidad
  };







FECHAAAAAAAAA



      const fechaServidor = new Date(valor.Fecha_nacimiento);
    const dia = fechaServidor.getDate().toString().padStart(2, "0");
    const mes = (fechaServidor.getMonth() + 1).toString().padStart(2, "0");
    const anio = fechaServidor.getFullYear();
    setF_naci(`${dia}/${mes}/${anio}`);


    const formattedDate = formatDate(f_naci);

     const formatDate = (date) => {
    const [month, day, year] = date.split("/");
    return `${year}-${month}-${day}`;
  };